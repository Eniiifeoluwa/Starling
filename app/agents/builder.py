
"""Builder node: generates a tiny MVP scaffold (README + app) and saves an artifact if not dry-run."""
from app.tools.git_manager import GitManager
from app.tools.storage import save_artifact
from app.memory.store import MemoryStore

git = GitManager()
mem = MemoryStore('./memory/db.sqlite')

async def builder_node_func(ctx: dict):
    idea = ctx.get('idea','').strip()
    dry_run = ctx.get('dry_run', True)
    repo_name = f"starling-mvp-{idea.lower().replace(' ','-')[:40]}" if idea else 'starling-mvp-untitled'
    files = {
        'README.md': f"# {repo_name}\n\nMVP for: {idea}\n\nGenerated by Starling Agent.\n",
        'app.py': "print('Hello from Starling MVP')\n"
    }
    artifact = {'repo': repo_name, 'files': list(files.keys())}
    if not dry_run:
        path = git.init_repo(repo_name, files)
        artifact['path'] = path
        # save README as downloadable artifact
        saved = save_artifact(ctx['run_id'], f"{repo_name}-README.md", files['README.md'].encode('utf-8'))
        mem.save_artifact(ctx['run_id'], f"{repo_name}-README.md", saved)
    mem.save_run_step(ctx['run_id'], 'builder', artifact)
    ctx.setdefault('artifacts', []).append(artifact)
    return ctx
